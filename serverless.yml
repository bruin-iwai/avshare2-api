service: avshare2-api
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ${env:AWS_REGION, 'ap-northeast-1'}
  memorySize: 512
  timeout: 30
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        - arn:aws:s3:::jp-live-bruin-iwai-audio-video/*
  deploymentBucket:
    blockPublicAccess: true
  tracing:
    apiGateway: true
    lambda: true
  logRetentionInDays: 14
  endpointType: regional
  apiKeys:
    - ${self:provider.stage}-myFirstKey
plugins:
  - serverless-layers
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies
  - serverless-pseudo-parameters
custom:
  serverless-layers:
    layersDeploymentBucket: jp-live-bruin-iwai-avshare2-api-layers-deploymentbucket
functions:
  getContentsList:
    handler: app/handler.getContentsList
    events:
      - http:
          path: contents/get
          method: get
          private: true
          # 2019/12/31現在、lambda-proxy integrationでcorsが正しく処理されなくなっているっぽい。
          # ドキュメントには「Lambdaのresponseにcors関連のヘッダを含めるように」とあるが、
          # そもそもlambda-proxyでGETリクエストするとLambdaが呼ばれないまま403応答になるので
          # Lambdaではなく API Gateway 側の問題と考えられる(AWSの未知のバグか)。
          # 仕方ないので、lambda integrationを使って明示的にcors関連ヘッダを設定する。
          cors: true
          allowCredentials: false
          integration: lambda
          request:
            template:
              application/json: '{ "prefix": "$input.params(''prefix'')" }'
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
    environment:
      BUCKET_NAME: jp-live-bruin-iwai-audio-video
