service: avshare2-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ${env:AWS_REGION, 'ap-northeast-1'}
  memorySize: 512
  timeout: 30
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - arn:aws:s3:::jp-live-bruin-iwai-audio-video/*
  deploymentBucket:
    name: jp-live-bruin-iwai-serverlessdeploymentbucket
    blockPublicAccess: true
  tracing:
    apiGateway: true
    lambda: true
  logRetentionInDays: 14
  endpointType: regional
  apiGateway:
    apiKeys:
      - ${self:provider.stage}-myFirstKey
  lambdaHashingVersion: '20201221'

package:
  patterns:
    - app/**
    - '!.github/**'
    - '!.husky/**'
    - '!coverage/**'
    - '!__mocks__/**'
    - '!__tests__/**'
    - '!.eslintcache'
    - '!.eslintrc.yml'
    - '!.gitignore'
    - '!.prettierignore'
    - '!.prettierrc.yml'
    - '!buildspec*'
    - '!jest.config.js'
    - '!package*.json'
    - '!*.md'
    - '!serverless.yml'
    - '!node_modules/**/aws-sdk/**'

plugins:
  - serverless-layers

functions:
  getContentsList:
    handler: app/handler.getContentsList
    events:
      - http:
          path: contents/{prefix}
          method: get
          private: true
          cors: true
          request:
            parameters:
              paths:
                prefix: true
    environment:
      BUCKET_NAME: jp-live-bruin-iwai-audio-video
    layers:
      - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14"
